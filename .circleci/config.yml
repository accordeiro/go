version: 2.1
commands:
  gofmt:
    steps:
      - checkout
      - run:
          name: Run gofmt
          command: ./gofmt.sh

  govet:
    steps:
      - checkout
      - run:
          name: Run govet
          command: ./govet.sh

  check_deprecations:
    steps:
      - run:
          name: Run deprecation tests when on a tagged commit
          command: |
            if [ "$CIRCLE_TAG" != "" ]; then
              # Negate the result so process exits with 1 if anything found
              echo "Searching for deprecated values in Horizon..."
              ! egrep -irn -A 1 --include=*.go "Deprecated.+-.+remove.+in:.+$CIRCLE_TAG" ./services/horizon/ ./protocols/horizon/
            fi

  install_deps:
    steps:
      - checkout
      - run:
          name: Install dep
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: Install project dependencies using dep
          command: dep ensure -v
      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/src/github.com/stellar/go/vendor"
            - "/go/src/pkg/dep"

  test_packages:
    steps:
      - run:
          name: Install dependencies
          command: sudo apt-get update && sudo apt-get install postgresql-client-9.6 mariadb-client-10.1

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for mysql, postgres and redis
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 1m
            dockerize -wait tcp://localhost:3306 -timeout 1m
            dockerize -wait tcp://localhost:6379 -timeout 1m

      - run:
          name: Run package tests
          command: ./support/scripts/run_tests

  build_packages:
    steps:
      - run:
          name: Build release artifacts
          command: go run ./support/scripts/build_release_artifacts/main.go
      - run:
          name: Push snapshots tag
          command: ./support/scripts/push_snapshots_tag.sh


jobs:
  # Code analysis jobs:
  check_code_1_10:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.10
    steps:
      - govet
      - check_deprecations

  check_code_1_11:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.11
    steps:
      - govet
      - check_deprecations

  check_code_1_12:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.12
    steps:
      - gofmt
      - govet
      - check_deprecations


  # Testing jobs:
  test_code_1_10:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.10
        environment:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: circleci
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: circleci
      - image: circleci/mysql:5.7
      - image: circleci/redis:5.0-alpine
    steps:
      - install_deps
      - test_packages

  test_code_1_11:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.11
        environment:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: circleci
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: circleci
      - image: circleci/mysql:5.7
      - image: circleci/redis:5.0-alpine
    steps:
      - install_deps
      - test_packages

  test_code_1_12:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.12
        environment:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: circleci
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: circleci
      - image: circleci/mysql:5.7
      - image: circleci/redis:5.0-alpine
    steps:
      - install_deps
      - test_packages

  publish-github-draft-release:
    working_directory: /go/src/github.com/stellar/go
    docker:
      - image: circleci/golang:1.11
    steps:
      - install_deps
      - build_packages
      - attach_workspace:
          at: ./dist
      - run:
          name: "Publish release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -draft -prerelease snapshots ./dist/


workflows:
  version: 2
  check_code_and_test:
    jobs:
      - check_code_1_10
      - check_code_1_11
      - check_code_1_12
      - test_code_1_10
      - test_code_1_11
      - test_code_1_12

  build_and_deploy:
    jobs:
      - publish-github-draft-release:
          filters:
            branches:
              only: master
